#!/bin/sh
# Portable dispatcher for a shell toolsuite

set -eu

TOOLBOX_NAME=${TOOLBOX_NAME:-toolbox}
TOOLBOX_VERSION=${TOOLBOX_VERSION:-}

# Resolve paths
_this="$0"
case "$_this" in
  /*) : ;;
  *) _this=$(command -v -- "$_this" 2>/dev/null || printf %s "$_this")
     case "$_this" in
       /*) : ;;
       */*) _this=$(CDPATH= cd -- "${_this%/*}" && pwd -P)/${_this##*/} ;;
       *) _this=$(CDPATH= cd -- . && pwd -P)/$_this ;;
     esac ;;
 esac
_bindir=${_this%/*}
_rootdir=${_bindir%/bin}
if [ -z "$TOOLBOX_VERSION" ] && [ -f "$_rootdir/VERSION" ]; then
  TOOLBOX_VERSION=$(sed -n '1p' "$_rootdir/VERSION" 2>/dev/null || printf '0.0.0')
fi
TOOLBOX_VERSION=${TOOLBOX_VERSION:-0.1.0}
LIB_DIR=${LIB_DIR:-"$_rootdir/lib"}
TOOLS_DIR=${TOOLS_DIR:-"$_rootdir/tools"}
TEMPLATE_DIR=${TEMPLATE_DIR:-"$_rootdir/templates"}

# shellcheck source=../lib/common.sh
. "$LIB_DIR/common.sh"
# shellcheck source=../lib/log.sh
. "$LIB_DIR/log.sh"
# shellcheck source=../lib/args.sh
. "$LIB_DIR/args.sh"
# shellcheck source=../lib/config.sh
. "$LIB_DIR/config.sh"

export TOOLBOX_NAME TOOLBOX_VERSION LIB_DIR TOOLS_DIR TEMPLATE_DIR

_usage_commands() {
  list_commands | sed 's/^/  /'
}

usage() {
  cat <<'__TOOLBOX_HELP__'
${TOOLBOX_NAME} ${TOOLBOX_VERSION}

Usage: ${TOOLBOX_NAME} [global-options] <command> [args]

Global options:
  -h, --help         Show this help
  -V, --version      Show version
  --no-color         Disable colored output
  --log-level LVL    Set log level (debug,info,warn,error)
  --config FILE      Use specific config file

Commands:
$(_usage_commands)

  Help:
  ${TOOLBOX_NAME} help [command]
__TOOLBOX_HELP__
}

_list_dir_entries() {
  local dir=$1
  find "$dir" -mindepth 1 -maxdepth 1 \( -type f -perm -u+x -o -type d \) -printf '%f\n' 2>/dev/null |
    LC_ALL=C sort |
    while IFS= read -r name; do
      case "$name" in
        __main|.*) continue ;;
      esac
      printf '%s\n' "$name"
    done
}

list_commands() {
  local dir="$TOOLS_DIR"
  if [ "$#" -eq 0 ]; then
    _list_dir_entries "$dir"
    return 0
  fi

  while [ "$#" -gt 0 ]; do
    case "$1" in
      "") shift; continue ;;
    esac
    if [ -d "$dir/$1" ]; then
      dir="$dir/$1"
      shift
      continue
    fi
    if [ -f "$dir/$1" ] && [ -x "$dir/$1" ]; then
      if [ "$#" -eq 1 ]; then
        return 0
      fi
      return 1
    fi
    return 0
  done

  _list_dir_entries "$dir"
}

_list_all_command_paths() {
  find "$TOOLS_DIR" -type f -perm -u+x -print | while IFS= read -r path; do
    case "$path" in
      */__main) : ;;
      *)
        rel=${path#"$TOOLS_DIR/"}
        printf '%s\n' "${rel//\// }"
        ;;
    esac
  done
  find "$TOOLS_DIR" -type f -name '__main' -perm -u+x -print | while IFS= read -r path; do
    rel=${path#"$TOOLS_DIR/"}
    dir=${rel%/__main}
    printf '%s\n' "${dir//\// }"
  done | LC_ALL=C sort -u
}

show_version() { printf '%s\n' "${TOOLBOX_NAME} ${TOOLBOX_VERSION}"; }

CFG_FILE=""
LOG_LEVEL=${LOG_LEVEL:-info}
COLOR=${COLOR:-auto}

while [ "$#" -gt 0 ]; do
  case "$1" in
    -h|--help) usage; exit 0 ;;
    -V|--version) show_version; exit 0 ;;
    --no-color) COLOR=never; shift ;;
    --log-level) req_arg "$@"; LOG_LEVEL=$2; shift 2 ;;
    --config) req_arg "$@"; CFG_FILE=$2; shift 2 ;;
    --) shift; break ;;
    -*) err "unknown option: %s" "$1"; usage >&2; exit 2 ;;
    *) break ;;
  esac
done

export LOG_LEVEL COLOR
setup_colors "$COLOR"
load_config "$CFG_FILE"

[ "$#" -gt 0 ] || { usage; exit 0; }

cmd=$1
case "$cmd" in
  __commands)
    shift
    list_commands "$@"
    exit 0
    ;;
  __all_commands)
    _list_all_command_paths | LC_ALL=C sort -u
    exit 0
    ;;
  __command_meta)
    shift
    [ "$#" -gt 0 ] || exit 1
    if data=$(resolve_command "$@" 2>/dev/null); then
      script=${data%%|*}
      rest=${data#*|}
      consumed=${rest%%|*}
      cmd_path=${rest#*|}
      TOOLBOX_CMD_PATH="$cmd_path" TOOLBOX_INTERNAL_META=1 "$script" --toolbox-meta
      exit $?
    fi
    exit 1
    ;;
  help)
    shift
    if [ "$#" -eq 0 ]; then
      usage
      exit 0
    fi
    if data=$(resolve_command "$@" 2>/dev/null); then
      script=${data%%|*}
      rest=${data#*|}
      cmd_path=${rest#*|}
      TOOLBOX_CMD_PATH="$cmd_path" "$script" --help
      exit $?
    fi
    err "unknown command: %s" "$*"
    exit 2
    ;;
  *)
    : ;;
esac

shift
cmd_parts=$cmd
consumed_guess=1

set -- "$@"
while [ "$#" -gt 0 ]; do
  case "$1" in
    --) break ;;
    -*) break ;;
    *)
      cmd_parts="$cmd_parts $1"
      consumed_guess=$((consumed_guess + 1))
      shift
      continue
      ;;
  esac
  break
done

set -- "$@"

if data=$(resolve_command $cmd_parts 2>/dev/null); then
  script=${data%%|*}
  rest=${data#*|}
  consumed=${rest%%|*}
  cmd_path=${rest#*|}
  export TOOLBOX_CMD_PATH="$cmd_path"
  exec "$script" "$@"
fi

err "unknown command: %s" "$cmd_parts"
note "see '%s help' for a list" "$TOOLBOX_NAME"
exit 2
